// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © bright_infinite
//@version=5
// ============================================================================= 
strategy('[CBB] 2023 Strategy Default  ', shorttitle='2023 strat default', pyramiding=0, calc_on_every_tick=false, initial_capital=1000000, default_qty_type=strategy.percent_of_equity, default_qty_value=20, max_bars_back=5000, overlay=true)

// ============================================================================= 
//              USER INPUT
// ============================================================================= 
in_lookback = input(defval=5, title='Lookback')
in_stratLong = input.int(defval=0, title='Long Strategy Selector', options=[0, 1, 2, 3, 4, 5])
in_stratShort = input.int(defval=0, title='Short Strategy Selector', options=[0, 1, 2, 3, 4, 5])

// ============================================================================= 
//              CONSTANTS
// =============================================================================   
FLAT = strategy.position_size == 0
LONG = strategy.position_size > 0
SHORT = strategy.position_size < 0
confirmed = barstate.isconfirmed
entry = strategy.position_avg_price

var lookForExit = false
var tradeStopPrice = 0.0
var tradeTargetPrice = 0.0
var trailingStop = 0.0
var tradeExitTriggerPrice = 0.0
var tradeStopDistance = 0.0
var tradeTriggerPrice = 0.0


// math.sum(source, length) → series float
h0 = (high + high[1] + high[2] + high[3] + high) / 2
l0 = (low + low[1]) / 2


// ============================================================================= 
//              FUNCTIONS
// =============================================================================   
isInSession(sess) =>
    na(time(timeframe.period, sess + ':1234567', 'GMT-6')) == false

oc(thresh) =>
    result = open > thresh and close > thresh ? 1 : open < thresh and close < thresh ? -1 : na
    result

newLine(x1, y1, x2, y2, col, style) =>
    _style = style == 'dotted' ? line.style_dotted : style == 'solid' ? line.style_solid : na
    line1 = line.new(x1, y1, x2, y2, extend=extend.none, color=col, width=1, style=_style)
    line.delete(line1[1])

// ============================================================================= 
//              VARIABLES
// =============================================================================   
ema_hl = ta.ema((high[in_lookback] - low[in_lookback] + high - low) / 2 + hl2, 20)

// ============================================================================= 
//              CONDITIONS
// ============================================================================= 

// ------------ TREND & BIAS FILTERS  
eqLo = close == close[1] or low == low[1] ? 1 : 0
eqHi = close == close[1] or high == high[1] ? 1 : 0

// ------------ DIVERGENCE


// ============================================================================= 
//              RISK MANAGEMENT
// ============================================================================= 

// ============================================================================= 
//              ORDER MANAGEMENT
// ============================================================================= 
// L0                          = up1
// S0                          = dn1
// L1                          = bull
// S1                          = bear
// L2                          = eqLo
// S2                          = eqHi
// L3                          = hiDiv
// S3                          = regDiv
// L4                          = bullDiv
// S4                          = bearDiv
// L5                          = dirBullDiv
// S5                          = dirBearDiv


// selStratL                   = in_stratLong  == 0 ? L0 :  in_stratLong  == 1 ? L1 : in_stratLong  == 2 ? L2 : in_stratLong  == 3 ? L3 : in_stratLong  == 4 ? L4 : in_stratLong  == 5 ? L5 : na
// selStratS                   = in_stratShort == 0 ? S0 :  in_stratShort == 1 ? S1 : in_stratShort == 2 ? S2 : in_stratShort == 3 ? S3 : in_stratShort == 4 ? S4 : in_stratShort == 5 ? S5 : na

// ============================================================================= 
//          STRATEGY EXECUTION 
// ============================================================================= 
// if(selStratL)
//     strategy.entry("Buy", strategy.long) // enter long by market if current open great then previous high
// strategy.close("Buy", selStratL) 

// if(selStratS)
//     strategy.entry("Sell", strategy.short) // enter long by market if current open great then previous high
// strategy.close("Sell", selStratS) //


// ============================================================================= 
//              PLOTS & COLORING
// ============================================================================= 
plot(ema_hl, 'EMA')

// ============================================================================= 
//          RESOURCES 
// ============================================================================= 

